/*
    This file is part of Corrade.

    Copyright © 2007, 2008, 2009, 2010, 2011, 2012, 2013
              Vladimír Vondruš <mosra@centrum.cz>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

/** @dir src
 * @brief Namespace Corrade
 */
/** @namespace Corrade
 * @brief Root namespace
 */

/** @dir src/Containers
 * @brief Namespace Corrade::Containers
 */
/** @namespace Corrade::Containers
@brief Container implementations

Implementations for various containers which don't have equivalents in STL.
*/

/** @dir src/Utility
 * @brief Namespace Corrade::Utility
 */
/** @namespace Corrade::Utility
@brief Simple utitlities

This library contains utility classes used by all other Corrade parts, like
debug and error output (class Debug), directory listing (class Directory),
access to configuration files (class Configuration), on which is based
translation support (class Translator) or compiling data files into the
executable (class Resource, see also @ref resource-management "tutorial").
*/

/** @dir src/PluginManager
 * @brief Namespace Corrade::PluginManager
 */
/** @namespace Corrade::PluginManager
@brief Plugin management

This library contains PluginManager, which takes care of loading, unloading
and instancing plugins. There is also an AbstractPlugin class, which is the base
of all plugins. See @ref plugin-management for a brief introduction to how
plugins work.
*/

/** @dir src/Interconnect
 * @brief Namespace Corrade::Interconnect
 */
/** @namespace Corrade::Interconnect
@brief Signal/slot connections

This library allows you to interconnect objects.
*/

/** @dir src/TestSuite
 * @brief Namespace Corrade::TestSuite
 */
/** @namespace Corrade::TestSuite
@brief Test suite

Unit testing framework. See @ref unit-testing for more information.
*/

/** @dir src/TestSuite/Compare
 * @brief Namespace Corrade::TestSuite::Compare
 */
/** @namespace Corrade::TestSuite::Compare
@brief Various test suite comparison helpers

See CORRADE_COMPARE_AS(), CORRADE_COMPARE_WITH() and Comparator for more
information.
*/
